version: '3.8'
services:
  apiconsumer:
    build: 
        context: .
        dockerfile: /ConsumerProject/Dockerfile
    depends_on:
        - sqlserver
        - rabbitmq
    ports:
        - "5623:80"
    environment:
      - "ConnectionStrings__DbConnection=${DB_CONNECTION}"
      - "AccessKey=${RABBITMQ_ACCESSKEY}"
      - "SecretKey=${RABBITMQ_SECRETKEY}"
      - "MassTransient:enable=true"
      - "RabbitMq:url=${RABBITMQ_URL}"
      - "ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT}"
      - Redis:Address=${REDIS_WRITEADDRESS}
      - Redis:Port=${REDIS_WRITEPORT}
      - Redis:Password=${REDIS_PASSWORD}
    networks:
        - rabbitmq_net

  apiproducer:
    build:
        context: .
        dockerfile: /ProducerProject/Dockerfile
    depends_on:
        - rabbitmq
    ports:
        - "5621:80"
    environment:
        - "ConnectionStrings__DbConnection=${DB_CONNECTION_PRODUCER}"
        - "AccessKey=${RABBITMQ_ACCESSKEY}"
        - "SecretKey=${RABBITMQ_SECRETKEY}"
        - "MassTransient:enable=true"
        - "RabbitMq:url=${RABBITMQ_URL}"
        - "ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT}"
    networks:
        - rabbitmq_net

  sqlserver:
    image: mcr.microsoft.com/mssql/server:2019-latest
    environment:
      ACCEPT_EULA: 'Y'
      SA_PASSWORD: ${SA_PASSWORD}
    ports:
      - "1433:1433"
    volumes:
      - sql_data:/var/opt/mssql
    networks:
      - rabbitmq_net

  rabbitmq:
    image: "rabbitmq:3-management"
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_ACCESSKEY}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_SECRETKEY}
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - "rabbitmq_data:/var/lib/rabbitmq"
    networks:
      - rabbitmq_net

  redis:
    image: redis
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    networks:
      - rabbitmq_net

  localstack:
    container_name: localstack
    image: localstack/localstack:latest
    ports:
      - "4566:4566"
      - "4571:4571"
    environment:
      - SERVICES=sqs,sns
      - DEFAULT_REGION=us-east-1
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
    volumes:
      - ./localstack:/docker-entrypoint-initaws.d
    networks:
      - rabbitmq_net

volumes:
  sql_data:
  rabbitmq_data:
  redis-data:
  localstack_data:

networks:
  rabbitmq_net:
   driver: bridge
